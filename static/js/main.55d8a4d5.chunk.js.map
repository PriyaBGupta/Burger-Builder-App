{"version":3,"sources":["component/Burger/BurgerIngredient/BurgerIngredient.module.css","component/Burger/BuildControls/BuildControl/BuildControl.module.css","component/Layout/Layout.module.css","component/Burger/Burger.module.css","component/Burger/BuildControls/BuildControls.module.css","hoc/Auxillary.js","component/Layout/Layout.js","component/Burger/BurgerIngredient/BurgerIngredient.js","component/Burger/Burger.js","component/Burger/BuildControls/BuildControl/BuildControl.js","component/Burger/BuildControls/BuildControls.js","container/BurgerBuilder/BurgerBuilder.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Auxillary","props","children","Layout","console","log","styles","className","content","BurgerIngredient","ingredient","type","classes","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngreditents","newPrice","setState","removeIngredientHandler","updatedIngredients","priceDeduction","disabledInfo","this","JSON","stringify","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.55d8a4d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2-XiO\",\"BreadTop\":\"BurgerIngredient_BreadTop__VkjlR\",\"Seeds1\":\"BurgerIngredient_Seeds1__1_AAn\",\"Seeds2\":\"BurgerIngredient_Seeds2__1K5-0\",\"Meat\":\"BurgerIngredient_Meat__2Dxpd\",\"Cheese\":\"BurgerIngredient_Cheese__1-DV4\",\"Salad\":\"BurgerIngredient_Salad__185nL\",\"Bacon\":\"BurgerIngredient_Bacon__1nzC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1Nijh\",\"Label\":\"BuildControl_Label__Yrhy4\",\"Less\":\"BuildControl_Less__2qXmV\",\"More\":\"BuildControl_More__1lL0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__16F30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__15Ly_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__31_va\"};","const Auxillary = props =>props.children;\r\nexport default Auxillary;\r\n","import React from 'react';\r\nimport styles from './Layout.module.css';\r\nimport Auxillary from '../../hoc/Auxillary';\r\nconst Layout = props => {\r\n    console.log(styles);\r\n    return(\r\n    <Auxillary>\r\n        <div> ToolBar Sidedrawer Backdrop </div>\r\n        <main className={styles.content}>\r\n            <div>{props.children}</div>\r\n        </main>\r\n    </Auxillary>\r\n    );\r\n};\r\nexport default Layout;\r\n\r\n","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst BurgerIngredient = props =>{\r\n    let ingredient = null;\r\n    switch (props.type) {\r\n        case ('bread-top'):\r\n            ingredient = <div className={classes.BreadTop}>\r\n                <div className={classes.Seeds1}></div>\r\n                <div className={classes.Seeds2}></div>\r\n            </div>\r\n            break;\r\n        case ('bread-bottom'):\r\n            ingredient =<div className={classes.BreadBottom}></div>\r\n            break;\r\n        case ('meat'):\r\n            ingredient =<div className={classes.Meat}></div>\r\n            break;\r\n        case ('cheese'):\r\n            ingredient =<div className={classes.Cheese}></div>\r\n            break;\r\n        case ('salad'):\r\n            ingredient =<div className={classes.Salad}></div>\r\n            break;\r\n        case ('bacon'):\r\n            ingredient =<div className={classes.Bacon}></div>\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n            break;\r\n    }\r\n    return ingredient;\r\n};\r\nBurgerIngredient.propTypes ={\r\n    type:PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nconst Burger = props => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey=>{\r\n        return [...Array(props.ingredients[igKey])].map((_,i)=>{\r\n            return <BurgerIngredient key={igKey + i} type={igKey}/>\r\n        });\r\n    })\r\n        .reduce((arr,el)=>{\r\n            return arr.concat(el)\r\n        },[]);\r\n    console.log(transformedIngredients);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start to add ingredients</p>\r\n    }\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default Burger;\r\n","import React from 'react';\r\nimport classes from \"./BuildControl.module.css\";\r\nconst BuildControl = (props) =>{\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less{props.disabled}</button>\r\n            <button className={classes.More} onClick={props.added}>More</button>\r\n        </div>\r\n    );\r\n}\r\nexport default BuildControl;\r\n","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from \"./BuildControls.module.css\";\r\nconst BuildControls = (props)=>{\r\n    const controls = [\r\n        {label:'Salad',type:'salad'},\r\n        {label:'Bacon',type:'bacon'},\r\n        {label:'Cheese',type:'cheese'},\r\n        {label:'Meat',type:'meat'}\r\n    ];\r\n    return (\r\n        <div className ={classes.BuildControls}>\r\n            <p>Current price:<strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl =>(<BuildControl\r\n                label = {ctrl.label}\r\n                key = {ctrl.label}\r\n                added = {()=>props.ingredientAdded(ctrl.type)}\r\n                removed = {()=>props.ingredientRemoved(ctrl.type)}\r\n                disabled = {props.disabled[ctrl.type]}\r\n                />))}\r\n        </div>\r\n    );\r\n}\r\nexport default BuildControls;\r\n","import React,{Component} from 'react';\r\nimport Auxillary from '../../hoc/Auxillary';\r\nimport Burger from '../../component/Burger/Burger';\r\nimport BuildControls from '../../component/Burger/BuildControls/BuildControls';\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat :1.3,\r\n    bacon:0.7\r\n};\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        ingredients:{\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n        },\r\n        totalPrice :4\r\n    }\r\n    addIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngreditents ={...this.state.ingredients};\r\n        updatedIngreditents[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const newPrice = priceAddition + this.state.totalPrice;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngreditents});\r\n    }\r\n    removeIngredientHandler = type =>{\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {...this.state.ingredients};\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const newPrice = this.state.totalPrice - priceDeduction;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    }\r\n    render(){\r\n        const disabledInfo = {...this.state.ingredients};\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key]<= 0;\r\n        }\r\n        console.log('disabledInfo'+ JSON.stringify(disabledInfo));\r\n         return(\r\n             <Auxillary>\r\n                 <Burger ingredients = {this.state.ingredients}/>\r\n                 <BuildControls ingredientAdded = {this.addIngredientHandler}\r\n                                ingredientRemoved = {this.removeIngredientHandler}\r\n                 disabled = {disabledInfo}\r\n                 price = {this.state.totalPrice}/>\r\n             </Auxillary>\r\n         )\r\n    }\r\n}\r\nexport default BurgerBuilder;\r\n","import React, { Component } from 'react';\r\nimport Layout from './component/Layout/Layout';\r\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout>\r\n          <BurgerBuilder/>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}